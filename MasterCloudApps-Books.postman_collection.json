{
	"info": {
		"_postman_id": "1a68b0cd-f974-4cf4-9445-72db75c1d19d",
		"name": "MasterCloudApps-Books",
		"description": "Books & comments REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get the list of books",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/books/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "29167c97-32e3-41ac-bcbe-82168995e0b5",
						"exec": [
							"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
							"pm.test(\"Location header is present\", () => {",
							"  pm.response.to.have.header(\"Location\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"author\": null,\n    \"published_year\": null,\n    \"publisher\": null,\n    \"summary\": null,\n    \"title\": \"El Quijote\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/books/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						""
					]
				}
			},
			"response": [
				{
					"name": "Save a book",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"author\": null,\n    \"published_year\": null,\n    \"publisher\": null,\n    \"summary\": null,\n    \"title\": \"El Quijote\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/books/",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"books",
								""
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Location",
							"value": "http://localhost:8080/books/10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Mon, 29 Nov 2021 07:25:08 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 10,\n    \"title\": \"El Quijote\",\n    \"summary\": null,\n    \"author\": null,\n    \"publisher\": null,\n    \"published_year\": null,\n    \"comments\": {}\n}"
				}
			]
		},
		{
			"name": "Create a book with invalid data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4d4c767d-bfb0-4ce5-ab81-eaed66927e9d",
						"exec": [
							"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });",
							"const jsonData = pm.response.json();",
							"pm.test(\"Test response is an error\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.code).to.eql(\"VALIDATION_FAILED\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"author\": null,\n    \"published_year\": null,\n    \"publisher\": null,\n    \"summary\": null,\n    \"title\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/books/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						""
					]
				}
			},
			"response": [
				{
					"name": "Save a book",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"author\": null,\n    \"published_year\": null,\n    \"publisher\": null,\n    \"summary\": null,\n    \"title\": \"El Quijote\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/books/",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"books",
								""
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Location",
							"value": "http://localhost:8080/books/10"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Mon, 29 Nov 2021 07:25:08 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 10,\n    \"title\": \"El Quijote\",\n    \"summary\": null,\n    \"author\": null,\n    \"publisher\": null,\n    \"published_year\": null,\n    \"comments\": {}\n}"
				}
			]
		},
		{
			"name": "Get a book by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2e90c306-539a-41cb-ae11-0f78850c5a2e",
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/books/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a book by non existing id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a89661e0-b4d0-46a6-a189-3097b6aeb33e",
						"exec": [
							"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
							"const jsonData = pm.response.json();",
							"pm.test(\"Test response is an error\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.code).to.eql(\"BOOK_NOT_FOUND\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/books/99999",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"99999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a comment by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eba644b9-a398-49f8-bbe5-0f5ba1c6d521",
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/books/1/comments/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"1",
						"comments",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a comment by non existing Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e36a33bf-8168-40da-bd7e-95b2e8e48872",
						"exec": [
							"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
							"const jsonData = pm.response.json();",
							"pm.test(\"Test response is an error\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.code).to.eql(\"COMMENT_NOT_FOUND\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/books/1/comments/99999",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"1",
						"comments",
						"99999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a new comment to a book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fd3bb4a1-fb72-46fd-af7c-2b2d384fe184",
						"exec": [
							"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
							"const jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).to.be.a(\"number\");",
							"  pm.expect(jsonData.username).to.be.a(\"string\");",
							"  pm.expect(jsonData.text).to.be.a(\"string\");",
							"});",
							"pm.test(\"Location header is present\", () => {",
							"  pm.response.to.have.header(\"Location\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"rating\": 3,\n\"text\": \"comment\",\n\"username\": \"username\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/books/1/comments",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"1",
						"comments"
					]
				}
			},
			"response": [
				{
					"name": "Add a new comment to a book",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"rating\": 3,\n\"text\": \"comment\",\n\"username\": \"username\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/books/1/comments",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"books",
								"1",
								"comments"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Location",
							"value": "http://localhost:8080/books/1/comments/11"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Mon, 29 Nov 2021 07:25:42 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 11,\n    \"username\": \"username\",\n    \"text\": \"comment\",\n    \"rating\": 3\n}"
				}
			]
		},
		{
			"name": "Add a new comment to a non existing book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e149c6fc-e7cb-4a8f-a678-5a8df6365d78",
						"exec": [
							"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
							"const jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).to.be.a(\"number\");",
							"  pm.expect(jsonData.username).to.be.a(\"string\");",
							"  pm.expect(jsonData.text).to.be.a(\"string\");",
							"});",
							"pm.test(\"Location header is present\", () => {",
							"  pm.response.to.have.header(\"Location\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"rating\": 3,\n\"text\": \"comment\",\n\"username\": \"username\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/books/1/comments",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"1",
						"comments"
					]
				}
			},
			"response": [
				{
					"name": "Add a new comment to a book",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"rating\": 3,\n\"text\": \"comment\",\n\"username\": \"username\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/books/1/comments",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"books",
								"1",
								"comments"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Location",
							"value": "http://localhost:8080/books/1/comments/11"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Mon, 29 Nov 2021 07:25:42 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 11,\n    \"username\": \"username\",\n    \"text\": \"comment\",\n    \"rating\": 3\n}"
				}
			]
		},
		{
			"name": "Add a new comment to a book with invalid data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "795929a8-ed60-457d-9710-df5672355857",
						"exec": [
							"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });",
							"const jsonData = pm.response.json();",
							"pm.test(\"Test response is an error\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.code).to.eql(\"VALIDATION_FAILED\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"rating\": 6,\n\"text\": \"\",\n\"username\": \"u\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/books/1/comments",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"1",
						"comments"
					]
				}
			},
			"response": [
				{
					"name": "Add a new comment to a book",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"rating\": 3,\n\"text\": \"comment\",\n\"username\": \"username\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/books/1/comments",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"books",
								"1",
								"comments"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Location",
							"value": "http://localhost:8080/books/1/comments/11"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Mon, 29 Nov 2021 07:25:42 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 11,\n    \"username\": \"username\",\n    \"text\": \"comment\",\n    \"rating\": 3\n}"
				}
			]
		},
		{
			"name": "Delete a comment from a book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81c34ef5-2593-4467-9989-709c0994eea6",
						"exec": [
							"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/books/1/comments/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"1",
						"comments",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9503605-bdcc-4dbe-941c-7b82802dfc5f",
						"exec": [
							"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/books/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}